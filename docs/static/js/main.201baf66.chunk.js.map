{"version":3,"sources":["dateRangepicker/DateContainer.js","dateRangepicker/reducer.js","dateRangepicker/styled/transitioin/SlideInOut.js","dateRangepicker/calender/MonthPicker.js","dateRangepicker/calender/DatePicker.js","dateRangepicker/styled/transitioin/GrowShrink.js","dateRangepicker/cssMix/index.js","dateRangepicker/calender/index.js","dateRangepicker/hooks/useMediaQuery.js","dateRangepicker/index.js","dateRangepicker/hooks/useOutsideClickAlert.js","App.js","reportWebVitals.js","index.js"],"names":["DateContainerComp","className","label","selectedDate","onClick","DateContainer","TitleName","ChooseDate","moment","isDate","isMoment","format","styled","div","SET_CALENDARVIEW","SET_DATE","initialState","calendarViewMonth","subtract","selectedStartDate","selectedEndDate","selectedType","reducer","state","action","type","momentTime","add","value","dateType","date","selecteDate","ContextStore","React","children","keyName","classNames","timeout","StyleTransitionGroup","childFactory","child","CSSTransition","TransitionGroup","onMonthChangeClick","isShowForwarIcon","isShowBackIcon","nowYearMonth","YearMonthPickArea","IconWrap","bind","SlideInOut","YearMonth","weekSeq","handleDayClick","firstDateDay","startOf","emptyDayArray","array","i","push","daysArray","getDatesBetweenTwoDates","endOf","Week","map","v","Weeklabel","Days","DayWrap","Empty","isBetweenDates","isBetween","isStatrtSelected","isSame","isEndSelected","DayContainer","Day","startDate","endDate","listDate","dateMove","strDate","endate","DatePicker","css","inProps","StyleTransition","in","media","Object","keys","pc","tablet","mobile","reduce","acc","join","calcWeeksInMonth","momentDate","monthStartWeekNumber","week","distinctWeeks","startOfMonth","clone","endOfMonth","day","isAfter","length","CalendarComp","calendarPosition","dispatch","setInProps","mediaType","initResize","setInitResize","setMediaType","handleResize","w","Math","max","document","documentElement","clientWidth","window","innerWidth","addEventListener","onresize","removeEventListener","useMediaQuery","calendarAmount","getWeeksNum","getNextMonthWeeksNumb","GrowShrink","CalendarWrap","Array","fill","Calendar","StyledCalendar","MonthPicker","right","DatesWrap","DateRangePicker","DateRangePickerComp","onChange","startActive","setStartActive","endActive","setEndActive","setCalendarPosition","wrapperRef","ref","onOutsideClick","active","useEffect","handleClickOutside","event","current","contains","target","useOutsideClick","calendarDom","offsetRight","offsetLeft","offsetWidth","handleStartState","pre","handleEndState","handleActiveState","checkBothTypeIsSelected","ifSelectedBefore","ifSelectedAfter","checkSelectedAfterEnd","isBefore","checkSelectedBeforeStart","Provider","fallback","App","useState","setStartDate","setEndDate","callbackStartDate","callbackEndDate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"g2BAIe,SAASA,EAAT,GAA0F,IAA7DC,EAA4D,EAA5DA,UAA4D,IAAjDC,aAAiD,MAAzC,eAAyC,MAAnCC,oBAAmC,MAApB,iCAAoB,EAAXC,EAAW,EAAXA,QAEzF,OAAO,eAACC,EAAD,CAAeJ,UAAWA,EAC7BG,QAASA,EADN,UAGH,cAACE,EAAD,UAAYJ,IACZ,cAACK,EAAD,UACAC,IAAOC,OAAON,IAAeK,IAAOE,SAASP,GAC7CK,IAAOL,GAAcQ,OAAO,SAAS,sCAM7C,IAAMN,EAAgBO,IAAOC,IAAV,KAsBbP,EAAYM,IAAOC,IAAV,KAITN,EAAaK,IAAOC,IAAV,K,eCzCVC,EAAmB,mBACnBC,EAAW,WACXC,EAAe,CACnBC,kBAAmBT,MAASU,SAAS,EAAG,KAAKP,OAAO,WACpDQ,kBAAmB,GACnBC,gBAAiB,GACjBC,aAAc,IAGVC,EAAU,WAAmC,IAAlCC,EAAiC,uDAAzBP,EAAcQ,EAAW,uCAChD,OAAQA,EAAOC,MACb,KAAKX,EACH,IAAMY,EAAaH,EAAMN,kBACnBA,EAAoBT,IAAOkB,GAC9BC,IAAIH,EAAOI,MAAO,KAClBjB,OAAO,WAEJU,EAAeG,EAAOI,MAAQ,EAAI,YAAc,aACtD,OAAO,2BACFL,GADL,IAEEN,oBACAI,iBAGJ,KAAKN,EACH,IAAMU,EAAOD,EAAOK,SACdC,EAAON,EAAOO,YACpB,OAAO,2BACFR,GADL,kBAEGE,EAAOK,IAEZ,QACE,OAAOP,IAIPS,EAAeC,gBAAoBjB,G,+hCChC1B,kBAAuD,IAApDkB,EAAmD,EAAnDA,SAAUC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,WAAgC,IAApBC,eAAoB,MAAV,IAAU,EACnE,OACE,cAACC,EAAD,CACED,QAASA,EACTE,aAAc,SAACC,GAAD,OAAWP,eAAmBO,EAAO,CAAEJ,gBAFvD,SAIE,cAACK,EAAA,EAAD,CAEEJ,QAASA,EACTD,WAAYA,EAHd,SAKGF,GAJIC,MAUPG,EAAuB1B,YAAO8B,IAAP9B,CAAH,KAwBR,qBAAGyB,QAAwB,QAiB3B,qBAAGA,QAAwB,Q,40BCxD9B,kBAMR,IALLpB,EAKI,EALJA,kBACA0B,EAII,EAJJA,mBACAtB,EAGI,EAHJA,aACAuB,EAEI,EAFJA,iBACAC,EACI,EADJA,eAEMC,EAAetC,IAAOS,GAAmBN,OAAO,qBAEtD,OACE,eAACoC,EAAD,WACGH,EACC,cAACI,EAAD,CAAU5C,QAASuC,EAAmBM,KAAK,MAAO,GAAlD,SAAuD,MAEvD,wBAEF,cAACC,EAAD,CAAYf,QAASlB,EAAmBmB,WAAYf,EAApD,SACE,cAAC8B,EAAD,UAAYL,MAEbD,GACC,cAACG,EAAD,CAAU5C,QAASuC,EAAmBM,KAAK,KAAM,GAAjD,SAAsD,UAQxDD,EAAWpC,IAAOC,IAAV,KAkBRkC,EAAoBnC,IAAOC,IAAV,IAQnBmC,EAGAA,GASEG,EAAYvC,IAAOC,IAAV,K,ysDCrEf,IAAMuC,EAAU,CAAC,SAAK,SAAK,SAAK,SAAK,SAAK,SAAK,UAEhC,cAKR,IALWnC,EAKZ,EALYA,kBACdI,EAIE,EAJFA,aACAF,EAGE,EAHFA,kBACAC,EAEE,EAFFA,gBAEE,IADFiC,sBACE,MADc,aACd,EAIIC,EAAe9C,IAAOS,GAAmBsC,QAAQ,SAAS5C,OAAO,KACjE6C,EAAgBvB,WAAc,WAEhC,IADA,IAAIwB,EAAQ,GACHC,EAAI,EAAGA,EAAIJ,EAAcI,IAC9BD,EAAME,KAAK,GAEf,OAAOF,IACR,CAACH,IACEM,EAAYC,EAAwBrD,IAAOS,GAAmBsC,QAAQ,SAAS5C,OAAO,cAAeH,IAAOS,GAAmB6C,MAAM,SAASnD,OAAO,eAC3J,OAAO,eAAC,EAAD,WACH,cAACoD,GAAD,UACKX,EAAQY,KAAI,SAACC,EAAGP,GAAJ,OAAU,cAACQ,GAAD,UAAoBD,GAAJP,QAE3C,cAACR,EAAD,CACIf,QAASlB,EACTmB,WAAYf,EAFhB,SAII,cAAC8C,EAAD,CACIhD,kBAAmBA,EACnBC,gBAAiBA,EACjBwC,UAAWA,EACXJ,cAAeA,EACfH,eAAgBA,UAQhC,SAASc,EAAT,GAKI,IALYP,EAKb,EALaA,UACZJ,EAID,EAJCA,cACArC,EAGD,EAHCA,kBACAC,EAED,EAFCA,gBACAiC,EACD,EADCA,eAGA,OAAO,eAACe,GAAD,WACFZ,EAAcQ,KAAI,SAACC,EAAGP,GAAJ,OAAU,cAACW,GAAD,GAAYX,MACxCE,EAAUI,KAAI,SAACC,EAAGP,GACf,IAAMY,EAAiB9D,IAAOyD,GAAGM,UAAUpD,EAAmBC,GACxDoD,EAAmBhE,IAAOyD,GAAGQ,OAAOtD,EAAkB,OACtDuD,EAAgBlE,IAAOyD,GAAGQ,OAAOrD,EAAgB,OACvD,OAAO,cAACuD,GAAD,CACHvE,QAAS,kBAAMiD,EAAe7C,IAAOyD,KAErCK,eAAgBA,EAChBE,iBAAkBA,EAClBE,cAAeA,EALZ,SAOH,cAACE,GAAD,CACIJ,iBAAkBA,EAClBE,cAAeA,EAFnB,SAIKhB,EAAI,KAXaO,SAqBtC,IAAMJ,EAA0B,SAACgB,EAAWC,GAMxC,IALA,IAAIC,EAAW,GACXC,EAAWxE,IAAOqE,GAClBI,EAAUzE,IAAOqE,GACfK,EAAS1E,IAAOsE,GAEfE,GAAYE,GACfD,EAAUzE,IAAOwE,GAAUrE,OAAO,cAClCoE,EAASpB,KAAKsB,GACdD,EAASrD,IAAI,EAAG,KAEpB,OAAOoD,GAILI,EAAavE,IAAOC,IAAV,KAOVkD,GAAOnD,IAAOC,IAAV,KAMJqD,GAAYtD,IAAOV,MAAV,KAITkE,GAAUxD,IAAOC,IAAV,KAWP+D,GAAMhE,IAAOC,IAAV,KASP,gBAAG2D,EAAH,EAAGA,iBAAkBE,EAArB,EAAqBA,cAArB,OAA0CF,GAAoBE,IAAkBU,YAAtC,QAOtCT,GAAe/D,IAAOC,IAAV,KAQJ,qBAAGyD,gBAAuC,aACtD,qBAAGE,kBAA6CY,YAArB,QAG3B,qBAAGV,eAAuCU,YAAlB,OAIxBR,IAMIP,GAAQzD,IAAOC,IAAV,K,yfC3JI,mBAAmD,IAAhDqB,EAA+C,EAA/CA,SAA+C,IAArCG,eAAqC,MAA3B,IAA2B,MAAtBgD,eAAsB,SAC/D,OACE,cAACC,GAAD,CACEC,GAAIF,EACJhD,QAASA,EACTD,WAAW,cAHb,SAKGF,KAKDoD,GAAkB1E,YAAO6B,IAAP7B,CAAH,MAEL,qBAAGyB,QAAwB,Q,8IClB3C,IAWamD,GAAQC,OAAOC,KARd,CACZC,GAAI,KACJC,OAAQ,SACRC,OAAQ,WAK8BC,QAAO,SAACC,EAAK7F,GA0BnD,OAzBA6F,EAAI7F,GAAS,WACX,GAAc,WAAVA,EACF,OAAOkF,YAAG,KAdY,KAgBhBA,IAAG,WAAH,cAEJY,KAAK,KAmBJD,IACN,I,2sBCtBH,SAASE,GAAiBC,GAQxB,IAPA,IAAMC,EAAuBD,EAAW3C,QAAQ,SAAS6C,OACnDC,EAAa,eAChBF,GAAuB,GAEtBG,EAAeJ,EAAWK,QAAQhD,QAAQ,SAC1CiD,EAAaN,EAAWK,QAAQzC,MAAM,SAGpC2C,EAAMH,EAAaC,SACtBE,EAAIC,QAAQF,GACbC,EAAI9E,IAAI,EAAG,QAEX0E,EAAcI,EAAIL,SAAU,EAE9B,OAAOX,OAAOC,KAAKW,GAAeM,OAGrB,SAASC,GAAT,GAAiF,IAAxDvD,EAAuD,EAAvDA,eAAgBwB,EAAuC,EAAvCA,UAAWC,EAA4B,EAA5BA,QAAS+B,EAAmB,EAAnBA,iBAAmB,EACjE5E,aAAiBD,GAArCT,EADqF,EACrFA,MAAOuF,EAD8E,EAC9EA,SAD8E,EAE/D7E,YAAe,GAFgD,mBAEtFoD,EAFsF,KAE7E0B,EAF6E,KAGvF9F,EAAoBM,EAAMN,kBAC1BI,EAAeE,EAAMF,aACrB2F,ECpCO,WAAO,IAAD,EACiB/E,YAAe,GADhC,mBACZgF,EADY,KACAC,EADA,OAEejF,WAAe,UAF9B,mBAEZ+E,EAFY,KAEDG,EAFC,KA6BnB,OAzBAlF,aAAgB,WACd,IAAMmF,EAAe,WACnB,IAAMC,EAAIC,KAAKC,IACbC,SAASC,gBAAgBC,YACzBC,OAAOC,YAAc,GAGrBT,EADEE,GAbkB,KAcP,KAEA,WAWjB,OAPAM,OAAOE,iBAAiB,SAAUT,GAE7BH,IACHU,OAAOG,SAAWV,IAClBF,GAAc,IAGT,WACLS,OAAOI,oBAAoB,SAAUX,MAEtC,CAACH,IAEGD,EDOWgB,GACZC,EAA+B,OAAdjB,EAAqB,EAAI,EAE1CrE,EAAqB,SAACf,GAC1BkF,EAAS,CAAErF,KAAM,mBAAoBG,WAgBvC,OAZAK,aAAgB,WACd,IAAIiG,EACAC,EAAwB,EAC5BD,EAAcjC,GAAiBzF,IAAOS,IACpB,OAAd+F,IACFmB,EAAwBlC,GACtBzF,IAAOS,GAAmBU,IAAI,EAAG,OAGrCoF,EAAWmB,EAAc,GAAKC,EAAwB,KACrD,CAAClH,EAAmB+F,IAGrB,cAACoB,GAAD,CAAY/C,QAASA,EAArB,SACE,cAACgD,GAAD,CAAcxB,iBAAkBA,EAAhC,SACGyB,MAAML,GACJM,KAAK,GACLvE,KAAI,SAACC,EAAGP,GAAJ,OACH,cAAC,GAAD,CAEEzC,kBAAmBT,IAAOS,GAAmBU,IAAI+B,EAAG,KACpDf,mBAAoBA,EACpBtB,aAAcA,EACdF,kBAAmB0D,EACnBzD,gBAAiB0D,EACjBzB,eAAgBA,EAEhBT,mBAAkBc,EAAI,GACtBb,eAA8B,OAAdmE,GAAsBtD,EAAI,GATrCA,UAiBnB,IAAM8E,GAAW,SAAC,GAAD,IACfvH,EADe,EACfA,kBACA0B,EAFe,EAEfA,mBACAtB,EAHe,EAGfA,aACAF,EAJe,EAIfA,kBACAC,EALe,EAKfA,gBACAiC,EANe,EAMfA,eACAT,EAPe,EAOfA,iBACAC,EARe,EAQfA,eARe,OAUf,eAAC4F,GAAD,WACI,cAACC,EAAD,CACEzH,kBAAmBA,EACnB0B,mBAAoBA,EACpBtB,aAAcA,EACduB,iBAAkBA,EAClBC,eAAgBA,IAElB,cAACsC,EAAD,CACElE,kBAAmBA,EACnBI,aAAcA,EACdF,kBAAmBA,EACnBC,gBAAiBA,EACjBiC,eAAgBA,QAMlBgF,GAAezH,IAAOC,IAAV,MAWd,kBACqB,UADrB,EAAGgG,iBAC4B,CAAE8B,MAAO,GAAM,KAC9CnD,GAAMI,OAbQ,OAkBZ6C,GAAiB7H,IAAOC,IAAV,M,4NE3HpB,IAoHM+H,GAAYhI,IAAOC,IAAV,MAKTgI,GAAkBjI,IAAOC,IAAV,MAGNiI,GA5Ha,YAIxB,IAAD,IAHDjE,iBAGC,MAHWrE,MAGX,MAFDsE,eAEC,MAFStE,MAET,MADDuI,gBACC,MADU,aACV,IACyB9G,aAAiBX,EAASN,GADnD,mBACMO,EADN,KACauF,EADb,OAEqC7E,YAAe,GAFpD,mBAEM+G,EAFN,KAEmBC,EAFnB,OAGiChH,YAAe,GAHhD,mBAGMiH,EAHN,KAGiBC,EAHjB,OAI+ClH,WAAe,QAJ9D,mBAIM4E,EAJN,KAIwBuC,EAJxB,KAMKC,EAAapH,SAAa,OClBnB,SAA8BqH,EAAKC,GAAgC,IAAhBC,EAAe,wDAC/EC,qBAAU,WACR,GAAKD,EASL,OADAhC,SAASK,iBAAiB,YAAa6B,GAChC,WAELlC,SAASO,oBAAoB,YAAa2B,IAT5C,SAASA,EAAmBC,GACtBL,EAAIM,UAAYN,EAAIM,QAAQC,SAASF,EAAMG,SAC7CP,OASH,CAACC,EAAQD,EAAgBD,IDK5BS,CAAgBV,GA4BhB,WACEF,GAAa,GACbF,GAAe,KA9BiCD,GAAeE,GAGjEjH,aAAgB,WACd,IAAM+H,EAAcX,EAAWO,QACzBK,EACJtC,OAAOC,WAAaoC,EAAYE,WAAaF,EAAYG,YAEvD,IAAMH,EAAYG,YAAcF,GAClCb,EAAoB,WAErB,IAEH,IAAMgB,EAAmB,WACvBnB,GAAe,SAACoB,GAAD,OAAUA,KACzBlB,GAAa,IAGTmB,EAAiB,WACrBnB,GAAa,SAACkB,GAAD,OAAUA,KACvBpB,GAAe,IAGXsB,EAAoB,SAAC9I,GACzB,GAAa,UAATA,EAAkB,OAAO2I,IAC7BE,KAQF,IAAME,EAA0B,SAAC3F,EAAWC,GAAZ,OAC9BtE,IAAOE,SAASmE,IAAcrE,IAAOE,SAASoE,IAO1CzB,EAAiBpB,eACrB,SAACF,GACC,IAAI0I,GAAmB,EACnBC,GAAkB,EAElB7I,EAAYmH,EAAe,YAAiBE,GAAa,UAY7D,MAViB,cAAbrH,IACF6I,EAXwB,SAAC5F,EAAS3E,GAAV,OAC5BK,IAAOL,GAAcuG,QAAQ5B,GAUP6F,CAAsB7F,EAAS/C,GACjDuI,KAEe,YAAbzI,GAA2BrB,IAAOE,SAASmE,IAC7CuF,IAEe,YAAbvI,GAA0B2I,IAC5BC,EApB2B,SAAC5F,EAAW1E,GAAZ,OAC/BK,IAAOL,GAAcyK,SAAS/F,GAmBPgG,CAAyBhG,EAAW9C,IAErD0I,GAAoBC,GACtB7I,EAAW,YACJkH,EAAS,CAAElE,UAAW9C,EAAa+C,QAAS,MAGpC,cAAbjD,EACKkH,EAAS,CAAElE,UAAW9C,EAAa+C,QAASA,SAGrDiE,EAAS,CAAElE,YAAWC,QAAS/C,MAEjC,CAACmH,EAAWpE,EAASiE,EAAUC,EAAanE,IAG9C,OACE,cAAC7C,EAAa8I,SAAd,CAAuBlJ,MAAO,CAAEL,QAAOuF,YAAvC,SACE,eAAC+B,GAAD,CAAiBS,IAAKD,EAAtB,UACE,eAACT,GAAD,WACE,cAAC,EAAD,CACE1I,MAAM,eACNC,aAAc0E,EACdzE,QAASmK,EAAkBtH,KAAK,KAAM,SACtChD,UAAW+I,GAAe,WAE5B,cAAC,EAAD,CACE9I,MAAM,eACNC,aAAc2E,EACd1E,QAASmK,EAAkBtH,KAAK,KAAM,OACtChD,UAAWiJ,GAAa,eAG1BF,GAAeE,IACf,cAAC,WAAD,CAAgB6B,SAAU,wBAA1B,SACE,cAAC,GAAD,CACElE,iBAAkBA,EAClBxD,eAAgBA,EAChBwB,UAAWA,EACXC,QAASA,Y,ME3FRkG,OArBf,WAAgB,IAAD,EACsBC,mBAASzK,MAASU,SAAS,EAAG,UADpD,mBACL2D,EADK,KACMqG,EADN,OAEkBD,mBAASzK,KAF3B,mBAELsE,EAFK,KAEIqG,EAFJ,KAUb,OACE,qBAAKlL,UAAU,MAAf,SACE,cAAC,GAAD,CACE4E,UAAWA,EACXC,QAASA,EACTiE,SAZmB,SAAC,GAGlB,IAFMqC,EAEP,EAFJvG,UACSwG,EACL,EADJvG,QAEAoG,EAAaE,GACbD,EAAWE,SCDDC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFzE,SAAS0E,eAAe,SAM1BZ,O","file":"static/js/main.201baf66.chunk.js","sourcesContent":["import * as React from \"react\";\nimport styled from 'styled-components'\nimport moment from 'moment'\n// style\nexport default function DateContainerComp({ className, label = '開始', selectedDate = '請選擇日期', onClick }) {\n\n    return <DateContainer className={className}\n        onClick={onClick}\n    >\n        <TitleName>{label}</TitleName>\n        <ChooseDate>{\n        moment.isDate(selectedDate)||moment.isMoment(selectedDate)?\n        moment(selectedDate).format('MM/DD'):'請選擇日期'}</ChooseDate>\n    </DateContainer>\n\n};\n\n\nconst DateContainer = styled.div`\nwidth:180px;\nheight:68px;\nborder:1px solid transparent;\nbox-sizing:border-box;\ndisplay: flex;\njustify-content:center;\nflex-direction:column;\ntext-align:left;\n/* border:1px solid #767676; */\n\ncursor: pointer;\npadding:16px 24px;\n:hover, &.active{\nborder-radius:10px;\nborder:1px solid #767676;\n}\n&.active{\n    background: #4a4a4a4d;\n}\n\n`\nconst TitleName = styled.div`\nfont-size:0.875rem;\nfont-weight:800;\n`\nconst ChooseDate = styled.div`\nfont-size:0.875rem;\n\n`","import * as React from 'react'\nimport moment from 'moment'\n\nconst SET_CALENDARVIEW = 'SET_CALENDARVIEW'\nconst SET_DATE = 'SET_DATE'\nconst initialState = {\n  calendarViewMonth: moment().subtract(1, 'M').format('YYYY-MM'),\n  selectedStartDate: '',\n  selectedEndDate: '',\n  selectedType: '',\n}\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_CALENDARVIEW:\n      const momentTime = state.calendarViewMonth\n      const calendarViewMonth = moment(momentTime)\n        .add(action.value, 'M')\n        .format('YYYY-MM')\n\n      const selectedType = action.value > 0 ? 'add-Month' : 'last-Month'\n      return {\n        ...state,\n        calendarViewMonth,\n        selectedType,\n      }\n\n    case SET_DATE:\n      const type = action.dateType\n      const date = action.selecteDate\n      return {\n        ...state,\n        [type]: date,\n      }\n    default:\n      return state\n  }\n}\n\nconst ContextStore = React.createContext(initialState)\n\nexport { initialState, reducer, ContextStore }\n","import * as React from 'react'\nimport styled from 'styled-components'\n\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\n\n// style\n\nexport default ({ children, keyName, classNames, timeout = 300 }) => {\n  return (\n    <StyleTransitionGroup\n      timeout={timeout}\n      childFactory={(child) => React.cloneElement(child, { classNames })}\n    >\n      <CSSTransition\n        key={keyName}\n        timeout={timeout}\n        classNames={classNames}\n      >\n        {children}\n      </CSSTransition>\n    </StyleTransitionGroup>\n  )\n}\n\nconst StyleTransitionGroup = styled(TransitionGroup)`\n  position: relative;\n  > div {\n    width: 100%;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n\n  .add-Month-enter {\n    transform: translate(60%, -50%) !important;\n  }\n  .add-Month-enter-active {\n    transform: translate(-50%, -50%) !important;\n  }\n  .add-Month-exit {\n    transform: translate(-50%, -50%) !important;\n  }\n  .add-Month-exit-active {\n    transform: translate(-160%, -50%) !important;\n  }\n  .add-Month-enter-active,\n  .add-Month-exit-active {\n    transition: ${({ timeout }) => timeout + 'ms'};\n  }\n\n  .last-Month-enter {\n    transform: translate(-160%, -50%) !important;\n  }\n  .last-Month-enter-active {\n    transform: translate(-50%, -50%) !important;\n  }\n  .last-Month-exit {\n    transform: translate(-50%, -50%) !important;\n  }\n  .last-Month-exit-active {\n    transform: translate(60%, -50%) !important;\n  }\n  .last-Month-enter-active,\n  .last-Month-exit-active {\n    transition: ${({ timeout }) => timeout + 'ms'};\n  }\n`\n","import * as React from 'react'\nimport styled from 'styled-components'\nimport moment from 'moment'\n\n// animation\nimport SlideInOut from '../styled/transitioin/SlideInOut'\n\n// icon\n\nexport default ({\n  calendarViewMonth,\n  onMonthChangeClick,\n  selectedType,\n  isShowForwarIcon,\n  isShowBackIcon,\n}) => {\n  const nowYearMonth = moment(calendarViewMonth).format('YYYY年M月')\n\n  return (\n    <YearMonthPickArea>\n      {isShowForwarIcon ? (\n        <IconWrap onClick={onMonthChangeClick.bind(null, -1)}>{'<'}</IconWrap>\n      ) : (\n        <div></div>\n      )}\n      <SlideInOut keyName={calendarViewMonth} classNames={selectedType}>\n        <YearMonth>{nowYearMonth}</YearMonth>\n      </SlideInOut>\n      {isShowBackIcon && (\n        <IconWrap onClick={onMonthChangeClick.bind(null, 1)}>{'>'}</IconWrap>\n      )}\n    </YearMonthPickArea>\n  )\n}\n\n// style\n\nconst IconWrap = styled.div`\n  box-sizing: border-box;\n  cursor: pointer;\n  flex: 0 0 30px;\n  height: 30px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  > svg {\n    height: 18px;\n    width: 18px;\n  }\n  :hover {\n    background: #0000001a;\n  }\n`\n\nconst YearMonthPickArea = styled.div`\n  display: grid;\n  align-items: center;\n  padding: 10px 0;\n  box-sizing: border-box;\n  width: 100%;\n  grid-template-columns: 30px 275px 30px;\n  grid-template-areas: 'leftIcon yearmonth rightIcon';\n  ${IconWrap}:nth-child(1)& {\n    grid-area: leftIcon;\n  }\n  ${IconWrap}:nth-child(3)& {\n    grid-area: rightIcon;\n  }\n`\n\n// const StyledSlideInOut = styled(SlideInOut)`\n// flex:0 0 285px;\n\n// `\nconst YearMonth = styled.div`\n  font-weight: 800;\n  text-align: center;\n`\n","import * as React from \"react\";\nimport styled, { css } from 'styled-components'\nimport moment from 'moment'\n// animation\nimport SlideInOut from '../styled/transitioin/SlideInOut'\n\nconst weekSeq = ['日', 'ㄧ', '二', '三', '四', '五', '六']\n\nexport default ({ calendarViewMonth,\n    selectedType,\n    selectedStartDate,\n    selectedEndDate,\n    handleDayClick =()=>{}\n}) => {\n    // get Number\n    // sunday - 0\n    // saturday - 7\n    const firstDateDay = moment(calendarViewMonth).startOf('month').format('d')\n    const emptyDayArray = React.useMemo(() => {\n        let array = []\n        for (let i = 0; i < firstDateDay; i++) {\n            array.push(0)\n        }\n        return array\n    }, [firstDateDay])\n    const daysArray = getDatesBetweenTwoDates(moment(calendarViewMonth).startOf('month').format('YYYY-MM-DD'), moment(calendarViewMonth).endOf('month').format('YYYY-MM-DD'))\n    return <DatePicker>\n        <Week>\n            {weekSeq.map((v, i) => <Weeklabel key={i}>{v}</Weeklabel>)}\n        </Week>\n        <SlideInOut\n            keyName={calendarViewMonth}\n            classNames={selectedType}\n        >\n            <Days\n                selectedStartDate={selectedStartDate}\n                selectedEndDate={selectedEndDate}\n                daysArray={daysArray}\n                emptyDayArray={emptyDayArray}\n                handleDayClick={handleDayClick} />\n        </SlideInOut>\n\n    </DatePicker>\n\n};\n\n\nfunction Days({ daysArray,\n    emptyDayArray,\n    selectedStartDate,\n    selectedEndDate,\n    handleDayClick\n}) {\n\n    return <DayWrap>\n        {emptyDayArray.map((v, i) => <Empty key={i} />)}\n        {daysArray.map((v, i) => {\n            const isBetweenDates = moment(v).isBetween(selectedStartDate, selectedEndDate)\n            const isStatrtSelected = moment(v).isSame(selectedStartDate,'day')\n            const isEndSelected = moment(v).isSame(selectedEndDate,'day')\n            return <DayContainer key={v}\n                onClick={() => handleDayClick(moment(v))\n                }\n                isBetweenDates={isBetweenDates}\n                isStatrtSelected={isStatrtSelected}\n                isEndSelected={isEndSelected}\n            >\n                <Day\n                    isStatrtSelected={isStatrtSelected}\n                    isEndSelected={isEndSelected}\n                >\n                    {i + 1}\n                </Day>\n            </DayContainer>\n        }\n        )\n        }\n\n    </DayWrap>\n}\n\nconst getDatesBetweenTwoDates = (startDate, endDate) => {\n    let listDate = [];\n    let dateMove = moment(startDate);\n    let strDate = moment(startDate)\n    const endate = moment(endDate)\n\n    while (dateMove <= endate) {\n        strDate = moment(dateMove).format('YYYY-MM-DD')\n        listDate.push(strDate);\n        dateMove.add(1, 'd');\n    }\n    return listDate\n\n}\n\nconst DatePicker = styled.div`\nwidth:100%;\nheight:100%;\ndisplay:grid;\ngrid-template-rows:22px auto; \n`;\n\nconst Week = styled.div`\ndisplay: grid;\ngrid-template-columns:repeat(7, 48px);\njustify-items:center;\nalign-items:center;\n`\nconst Weeklabel = styled.label`\nfont-size:0.875rem;\n`\n\nconst DayWrap = styled.div`\nwidth:100%;\nheight:100%;\ndisplay:grid;\n/* flex-wrap:wrap; */\ngrid-template-columns:repeat(7, 48px);\ngrid-template-rows:repeat(auto-fill, 48px);\ngrid-row-gap:2px;\nbox-sizing:border-box;\n`\n\nconst Day = styled.div`\nwidth:100%;\nheight:100%;\nborder-radius:50%;\nborder:2px solid transparent;\ndisplay: flex;\njustify-content:center;\nalign-items:center;\nbox-sizing:border-box;\n${({ isStatrtSelected, isEndSelected }) => (isStatrtSelected || isEndSelected) && css`\n    background:#000000;\n    background-position:center;\n    color:#ffffff;\n    border-radius:50%;\n`}\n`\nconst DayContainer = styled.div`\ncursor: pointer;\nbox-sizing:border-box;\nwidth:48px;\nheight:48px;\ndisplay: flex;\njustify-content:center;\nalign-items:center;\nbackground: ${({ isBetweenDates }) => isBetweenDates && '#f7f7f7'};\n${({ isStatrtSelected }) => (isStatrtSelected) && css`\nbackground: linear-gradient(90deg, #FFFFFF 50%, #F7F7F7 50%);\n`}\n${({ isEndSelected }) => (isEndSelected) && css`\nbackground: linear-gradient(90deg, #F7F7F7 50%, #FFFFFF 50%);\n`}\n:hover{\n${Day}&{\n    border:2px solid #000000;\n   }\n}\n`\n\nconst Empty = styled.div`\nwidth:48px;\nheight:48px;\n`","import * as React from 'react'\nimport styled from 'styled-components'\n\nimport { CSSTransition } from 'react-transition-group'\n\n// style\n\nexport default ({ children, timeout = 300, inProps = false }) => {\n  return (\n    <StyleTransition\n      in={inProps}\n      timeout={timeout}\n      classNames=\"grow-shrink\"\n    >\n      {children}\n    </StyleTransition>\n  )\n}\n\nconst StyleTransition = styled(CSSTransition)`\n  position: relative;\n  transition: ${({ timeout }) => timeout + 'ms'};\n  &.grow-shrink-enter {\n    height: 358px !important;\n  }\n  &.grow-shrink-enter-active {\n    height: 405px !important;\n  }\n  &.grow-shrink-enter-done {\n    height: 405px !important;\n  }\n\n  &.grow-shrink-exit {\n    height: 405px !important;\n  }\n  &.grow-shrink-exit-active {\n    height: 358px !important;\n  }\n  &.grow-shrink-exit-done {\n    height: 358px !important;\n  }\n`\n","import { css } from \"styled-components\";\n\n// constants\nconst PC_BREAKPOINT_WIDTH = 1024; \n\n\nconst sizes = {\n  pc: \"pc\", \n  tablet: \"tablet\", \n  mobile: \"mobile\" \n};\n\n// refs: https://www.styled-components.com/docs/advanced#media-templates\n// Iterate through the sizes and create a media template\nexport const media = Object.keys(sizes).reduce((acc, label) => {\n  acc[label] = (...args) => {\n    if (label === \"tablet\") {\n      return css`\n        @media (max-width: ${PC_BREAKPOINT_WIDTH}px) {\n          ${css(...args)}\n        }\n      `.join(\"\");\n    } \n    // else if (label === \"tablet\") {\n    //   return css`\n    //     @media (max-width: ${TABLET_BREAKPOINT_WIDTH}px) {\n    //       ${css(...args)}\n    //     }\n    //   `.join(\"\");\n    // } \n    // else {\n    //   return css`\n    //     @media (min-width: ${MOBILE_BREAKPOINT_WIDTH}px) and (max-width: ${PC_BREAKPOINT_WIDTH -\n    //         1}px) {\n    //       ${css(...args)}\n    //     }\n    //   `.join(\"\");\n    // }\n  };\n\n  return acc;\n}, {});","import * as React from 'react'\nimport styled from 'styled-components'\nimport moment from 'moment'\n\nimport { ContextStore } from '../reducer'\n\n// comp\nimport MonthPicker from './MonthPicker'\nimport DatePicker from './DatePicker'\n\n// transition\nimport GrowShrink from '../styled/transitioin/GrowShrink'\n\n// hook\nimport useMediaQuery from '../hooks/useMediaQuery'\n\n// media\nimport { media } from '../cssMix'\n\nfunction calcWeeksInMonth(momentDate) {\n  const monthStartWeekNumber = momentDate.startOf('month').week()\n  const distinctWeeks = {\n    [monthStartWeekNumber]: true,\n  }\n  let startOfMonth = momentDate.clone().startOf('month')\n  let endOfMonth = momentDate.clone().endOf('month')\n  //  this is an 'inclusive' range -> iterates through all days of a month\n  for (\n    let day = startOfMonth.clone();\n    !day.isAfter(endOfMonth);\n    day.add(1, 'days')\n  ) {\n    distinctWeeks[day.week()] = true\n  }\n  return Object.keys(distinctWeeks).length\n}\n\nexport default function CalendarComp ({ handleDayClick, startDate, endDate, calendarPosition }){\n  const { state, dispatch } = React.useContext(ContextStore)\n  const [inProps, setInProps] = React.useState(false)\n  const calendarViewMonth = state.calendarViewMonth\n  const selectedType = state.selectedType\n  const mediaType = useMediaQuery()\n  const calendarAmount = mediaType === 'pc' ? 2 : 1\n\n  const onMonthChangeClick = (value) => {\n    dispatch({ type: 'SET_CALENDARVIEW', value })\n  }\n\n  // set (in) prop to tranform calendar\n  React.useEffect(() => {\n    let getWeeksNum\n    let getNextMonthWeeksNumb = 0\n    getWeeksNum = calcWeeksInMonth(moment(calendarViewMonth))\n    if (mediaType === 'pc') {\n      getNextMonthWeeksNumb = calcWeeksInMonth(\n        moment(calendarViewMonth).add(1, 'M')\n      )\n    }\n    setInProps(getWeeksNum > 5 || getNextMonthWeeksNumb > 5)\n  }, [calendarViewMonth, mediaType])\n\n  return (\n    <GrowShrink inProps={inProps}>\n      <CalendarWrap calendarPosition={calendarPosition}>\n        {Array(calendarAmount)\n          .fill(0)\n          .map((v, i) => (\n            <Calendar\n              key={i}\n              calendarViewMonth={moment(calendarViewMonth).add(i, 'M')}\n              onMonthChangeClick={onMonthChangeClick}\n              selectedType={selectedType}\n              selectedStartDate={startDate}\n              selectedEndDate={endDate}\n              handleDayClick={handleDayClick}\n              // give seq to decide icon appear\n              isShowForwarIcon={i > 0 ? false : true}\n              isShowBackIcon={mediaType !== 'pc' || i > 0}\n            />\n          ))}\n      </CalendarWrap>\n    </GrowShrink>\n  )\n}\n\nconst Calendar = ({\n  calendarViewMonth,\n  onMonthChangeClick,\n  selectedType,\n  selectedStartDate,\n  selectedEndDate,\n  handleDayClick,\n  isShowForwarIcon,\n  isShowBackIcon,\n}) => (\n  <StyledCalendar>\n      <MonthPicker\n        calendarViewMonth={calendarViewMonth}\n        onMonthChangeClick={onMonthChangeClick}\n        selectedType={selectedType}\n        isShowForwarIcon={isShowForwarIcon}\n        isShowBackIcon={isShowBackIcon}\n      />\n      <DatePicker\n        calendarViewMonth={calendarViewMonth}\n        selectedType={selectedType}\n        selectedStartDate={selectedStartDate}\n        selectedEndDate={selectedEndDate}\n        handleDayClick={handleDayClick}\n      />\n  </StyledCalendar>\n)\n\n// style\nconst CalendarWrap = styled.div`\n  display: flex;\n  box-sizing: border-box;\n  border: 1px solid black;\n  padding: 8px 24px;\n  height: 358px;\n  width: 776px;\n  border-radius: 10px;\n  position: absolute;\n  background: #ffffff;\n  z-index: 10000;\n  ${({ calendarPosition }) =>\n    calendarPosition === 'right' ? { right: 0 } : { }}\n  ${media.tablet`\n    width:388px;\n`};\n`\n\nconst StyledCalendar = styled.div`\n  box-sizing: border-box;\n  margin-top: 10px;\n  width: 336px;\n  height: 358px;\n  border-radius: 10px;\n  overflow: hidden;\n  flex-shrink: 0;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  margin-right: 39px;\n`\n","import * as React from \"react\"\n// refs: https://github.com/matthewhudson/current-device\n// constants\nconst PC_BREAKPOINT_WIDTH = 1024 // pc ( resolution > 1024 )\n// mobile ( resolution < 640 )\n\nexport default () => {\n  const [initResize, setInitResize] = React.useState(false)\n  const [mediaType, setMediaType] = React.useState(\"mobile\")\n\n  React.useEffect(() => {\n    const handleResize = () => {\n      const w = Math.max(\n        document.documentElement.clientWidth,\n        window.innerWidth || 0\n      )\n      if (w >= PC_BREAKPOINT_WIDTH) {\n        setMediaType(\"pc\")\n      } else {\n        setMediaType(\"mobile\")\n      }\n    }\n\n    window.addEventListener(\"resize\", handleResize)\n\n    if (!initResize) {\n      window.onresize = handleResize()\n      setInitResize(true)\n    }\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize)\n    }\n  }, [initResize])\n\n  return mediaType\n}\n","import * as React from 'react'\nimport styled from 'styled-components'\nimport DateContainer from './DateContainer'\nimport moment from 'moment'\n// reducer\nimport { initialState, reducer, ContextStore } from './reducer'\nimport Calendar from './calender/index'\n// hook\nimport useOutsideClick from './hooks/useOutsideClickAlert'\n\nconst DateRangePickerComp = function ({\n  startDate = moment(),\n  endDate = moment(),\n  onChange = () => {},\n}) {\n  const [state, dispatch] = React.useReducer(reducer, initialState)\n  const [startActive, setStartActive] = React.useState(false)\n  const [endActive, setEndActive] = React.useState(false)\n  const [calendarPosition, setCalendarPosition] = React.useState('left')\n\n  const wrapperRef = React.useRef(null)\n\n  useOutsideClick(wrapperRef, cancelDatePickActive, startActive || endActive)\n\n  // set calendar position to right or left\n  React.useEffect(() => {\n    const calendarDom = wrapperRef.current\n    const offsetRight =\n      window.innerWidth - calendarDom.offsetLeft - calendarDom.offsetWidth\n\n    if (656 - calendarDom.offsetWidth > offsetRight) {\n      setCalendarPosition('right')\n    }\n  }, [])\n\n  const handleStartState = () => {\n    setStartActive((pre) => !pre)\n    setEndActive(false)\n  }\n\n  const handleEndState = () => {\n    setEndActive((pre) => !pre)\n    setStartActive(false)\n  }\n\n  const handleActiveState = (type) => {\n    if (type === 'start') return handleStartState()\n    handleEndState()\n  }\n\n  function cancelDatePickActive() {\n    setEndActive(false)\n    setStartActive(false)\n  }\n\n  const checkBothTypeIsSelected = (startDate, endDate) =>\n    moment.isMoment(startDate) && moment.isMoment(endDate)\n\n  const checkSelectedBeforeStart = (startDate, selectedDate) =>\n    moment(selectedDate).isBefore(startDate)\n  const checkSelectedAfterEnd = (endDate, selectedDate) =>\n    moment(selectedDate).isAfter(endDate)\n\n  const handleDayClick = React.useCallback(\n    (selecteDate) => {\n      let ifSelectedBefore = false\n      let ifSelectedAfter = false\n\n      let dateType = (startActive && 'startDate') || (endActive && 'endDate')\n\n      if (dateType === 'startDate') {\n        ifSelectedAfter = checkSelectedAfterEnd(endDate, selecteDate)\n        handleEndState()\n      }\n      if (dateType === 'endDate' && !moment.isMoment(startDate)) {\n        handleStartState()\n      }\n      if (dateType === 'endDate' && checkBothTypeIsSelected) {\n        ifSelectedBefore = checkSelectedBeforeStart(startDate, selecteDate)\n      }\n      if (ifSelectedBefore || ifSelectedAfter) {\n        dateType = 'startDate'\n        return onChange({ startDate: selecteDate, endDate: '' })\n      }\n\n      if (dateType === 'startDate') {\n        return onChange({ startDate: selecteDate, endDate: endDate })\n      }\n\n      onChange({ startDate, endDate: selecteDate })\n    },\n    [endActive, endDate, onChange, startActive, startDate]\n  )\n\n  return (\n    <ContextStore.Provider value={{ state, dispatch }}>\n      <DateRangePicker ref={wrapperRef}>\n        <DatesWrap>\n          <DateContainer\n            label=\"開始\"\n            selectedDate={startDate}\n            onClick={handleActiveState.bind(null, 'start')}\n            className={startActive && 'active'}\n          />\n          <DateContainer\n            label=\"結束\"\n            selectedDate={endDate}\n            onClick={handleActiveState.bind(null, 'end')}\n            className={endActive && 'active'}\n          />\n        </DatesWrap>\n        {(startActive || endActive) && (\n          <React.Suspense fallback={<div></div>}>\n            <Calendar\n              calendarPosition={calendarPosition}\n              handleDayClick={handleDayClick}\n              startDate={startDate}\n              endDate={endDate}\n            />\n          </React.Suspense>\n        )}\n      </DateRangePicker>\n    </ContextStore.Provider>\n  )\n}\n\nconst DatesWrap = styled.div`\n  display: flex;\n  width: 360px;\n  position: relative;\n`\nconst DateRangePicker = styled.div`\n  width: 100%;\n`\nexport default DateRangePickerComp","import { useEffect } from 'react'\n\nexport default function useOutsideClickAlert(ref, onOutsideClick, active = false){\n  useEffect(() => {\n    if (!active) return\n\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n        onOutsideClick()\n      }\n    }\n    // Bind the event listener\n    document.addEventListener('mousedown', handleClickOutside)\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n  }, [active, onOutsideClick, ref])\n}\n","import React, { useState } from 'react'\nimport DateRangePicker from './dateRangepicker/index'\nimport moment from 'moment'\nimport './App.css';\n\nfunction App() {\n   const [startDate, setStartDate] = useState(moment().subtract(1, 'month'))\n   const [endDate, setEndDate] = useState(moment)\n   const handleDateClick = ({\n     startDate: callbackStartDate,\n     endDate: callbackEndDate,\n   }) => {\n     setStartDate(callbackStartDate)\n     setEndDate(callbackEndDate)\n   }\n  return (\n    <div className=\"App\">\n      <DateRangePicker\n        startDate={startDate}\n        endDate={endDate}\n        onChange={handleDateClick}\n      />\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}